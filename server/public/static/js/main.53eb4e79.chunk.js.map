{"version":3,"sources":["components/auth/AuthService.js","components/navbar/Navbar.jsx","components/auth/Signup.js","components/auth/Login.js","components/contents/Experience.jsx","components/contents/HomeLogged.jsx","components/contents/EscapeService.js","components/contents/EscapeSelector.jsx","components/contents/RoomSelector.jsx","components/contents/AddExperience.jsx","components/contents/AllExperiences.jsx","components/contents/Profile.jsx","components/contents/Contents.jsx","components/contents/HomePage.jsx","App.js","serviceWorker.js","index.js","journal-LOGO2.png"],"names":["AuthService","_this","this","Object","classCallCheck","signup","username","password","email","name","service","post","then","response","data","checkUser","get","login","loggedin","logout","axios","create","baseURL","concat","process","withCredentials","Navbar","props","possibleConstructorReturn","getPrototypeOf","call","handleLogout","e","state","loggedInUser","nextProps","setState","objectSpread","react_default","a","createElement","className","role","aria-label","Link","to","src","width","height","alt","id","onClick","dist","color","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","handleChange","_event$target","target","value","defineProperty","_this2","onSubmit","onChange","type","placeholder","autoComplete","length","inverted","Login","Experience","card_default","Image","size","Content","media_default","Item","renderAs","position","image_default","heading_default","subtitle","content_default","href","dateTime","HomeLogged","Fragment","Experience_Experience","EscapeService","addExperience","escapeDone","roomsDone","team","date","imgName","imgPath","allEscapes","allRooms","options","escapes","map","escape","label","_id","EscapeSelector","selectedOption","updateEscapeDone","react_select_browser_esm","React","rooms","filteredRooms","forEach","element","push","room","RoomSelector","updateRoomDone","AddExperience","selectedEscapeDone","selectedRoomDone","contents_EscapeSelector","isSearchable","contents_RoomSelector","AllExperiences","Profile","Contents","userInSession","userService","_this3","getEscapes","getRooms","_this4","Switch","Route","exact","path","render","HomeLogged_HomeLogged","contents_AddExperience","AllExperiences_AllExperiences","Profile_Profile","HomePage","logo","App","userObj","fetchUser","err","Redirect","components_navbar_Navbar","contents_Contents","HomePage_HomePage","auth_Signup","auth_Login","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.53eb4e79.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}api/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password, email, name) => {\n    return this.service.post('/signup', {username, password, email, name})\n    .then(response => response.data)\n  }\n  checkUser = (username) => {\n    return this.service.get('/checkUser', {username})\n    .then(response => response.data)\n  }\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/AuthService\";\nimport { Button } from \"react-bulma-components\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n//  correctName() {\n//   let letters = this.state.loggedInUser.name.split('');\n//   let firstLetter = letters.shift()\n//   letters.unshift(firstLetter.toUpperCase());\n//   let newName = letters.join()\n//   this.setState(\n//     {...this.state,\n//     name: newName}\n//   )\n//  }\n  \n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav\n          className=\"navbar is-fixed-top\"\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"navbar-brand\">\n            <Link className=\"navbar-item\" to=\"/home\">\n              <img src=\"house-lock.png\" width=\"28\" height=\"28\" alt='home-icon'/>\n            </Link>\n\n            {/* \n            This makes the mobile menu appear. TODO in responsive design.\n            <a\n              role=\"button\"\n              className=\"navbar-burger burger\"\n              aria-label=\"menu\"\n              aria-expanded=\"false\"\n              data-target=\"navbarBasicExample\"\n            >\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </a> */}\n          </div>\n\n          <div id=\"JournalNavbar\" className=\"navbar-menu\">\n            <div className=\"navbar-start\">\n              <Link to=\"/add-experience\" className=\"navbar-item\">Add experience</Link>\n              <Link to=\"/all-experiences\" className=\"navbar-item\">All my escapes</Link>\n              <Link to=\"/profile\" className=\"navbar-item\">My profile</Link>\n            </div>\n\n            <div className=\"navbar-end\">\n            <div className=\"navbar-item\"><h2>Hi, {this.state.loggedInUser.name}</h2></div>\n\n            <div className=\"navbar-item\" onClick={this.handleLogout}><Button color=\"danger\">\n                  <span>Logout</span>\n                </Button></div>\n            </div>\n          </div>\n        </nav>\n\n        //     <li>\n        //       <a onClick={this.handleLogout}>Logout</a>\n        //     </li>\n        //     <li>\n        //       <Link to=\"/signup\">Search</Link>\n        //     </li>\n        //   </ul>\n\n        //   <div className=\"header\">\n        //     <h2>Welcome {this.state.loggedInUser.username} - Ironhacker</h2>\n        //   </div>\n        // </nav>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <ul>\n              <li>\n                <Link to=\"/signup\">Signup</Link>\n              </li>\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","// auth/Signup.js\nimport React, { Component } from \"react\";\nimport AuthService from \"./AuthService\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bulma-components\";\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\", email: \"\", name: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    const email = this.state.email;\n    const name = this.state.name;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service\n      .signup(username, password, email, name)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n          email: \"\",\n          name: \"\"\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user);\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          email: email,\n          name: name,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  // checkUser(username) {\n  //   console.log(username)\n  //   this.service.checkUser(username)\n  //   .then(response => console.log(response.data))\n\n  // }\n  render() {\n    return (\n      <div>\n        <h3>Welcome to <span>My Escape Journal</span>. Here you can create your account</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"field\">\n            <label className=\"label\">Name</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={e => this.handleChange(e)}\n                type=\"text\"\n                placeholder=\"Your name\"\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"far fa-address-card\"></i>\n              </span>\n              {this.state.name &&<span className=\"icon is-small is-right ok\">\n                <i className=\"fas fa-check\"></i>\n              </span>}\n              {!this.state.name &&<span className=\"icon is-small is-right not-ok\">\n                <i className=\"fas fa-exclamation-triangle\"></i>\n              </span>}\n              {!this.state.name && <p className=\"help is-danger\">Please, enter your name</p>}\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Username</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Username\"\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-user\"></i>\n              </span>\n              {this.state.username && <span className=\"icon is-small is-right ok\">\n                <i className=\"fas fa-check\"></i>\n              </span>}\n              {!this.state.username && <span className=\"icon is-small is-right not-ok\">\n                <i className=\"fas fa-exclamation-triangle\"></i>\n              </span>}\n            </div>\n            {/* {this.checkUser(this.state.username) && <p className=\"help is-success\">This username is available</p>}\n            {!this.state.username && <p className=\"help is-danger\">This username is invalid</p>} */}\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"email\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={e => this.handleChange(e)}\n                placeholder=\"your-email-address@email.example\"\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-envelope\"></i>\n              </span>\n              {this.state.email && <span className=\"icon is-small is-right is-ok\">\n                <i className=\"fas fa-check\"></i>\n              </span>}\n              {!this.state.email && <span className=\"icon is-small is-right is-not-ok\">\n                <i className=\"fas fa-exclamation-triangle\"></i>\n              </span>}\n            </div>\n            {/* <p className=\"help is-success\">This email is correct</p>\n            <p className=\"help is-danger\">This email is invalid</p> */}\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Password</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={e => this.handleChange(e)}\n                type=\"password\"\n                placeholder=\"Please, choose a password\"\n                autoComplete=\"off\"\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-lock\"></i>\n              </span>\n              {this.state.password.length>=8 && <span className=\"icon is-small is-right is-ok\">\n                <i className=\"fas fa-check\"></i>\n              </span>}\n              {this.state.password.length<8 && <span className=\"icon is-small is-right is-not-ok\">\n                <i className=\"fas fa-exclamation-triangle\"></i>\n              </span>}\n            </div>\n            {this.state.password.length<8&& this.state.password.length>0 && <p className=\"help is-danger\">\n              The password must contain at least 8 characters and at least one\n              of them has to be a number\n            </p>}\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <Link to=\"/public\">\n                <Button color=\"danger\" inverted={true}>\n                  <span>Back to home</span>\n                </Button>\n              </Link>\n            </div>\n            <div className=\"control\">\n              <input type=\"submit\" value=\"Sign up\" className=\"button is-link\" />\n            </div>\n          </div>\n        </form>\n        <h1>{this.state.error ? 'There seems to be an error. Please, try again' : ''}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","// auth/Signup.js\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bulma-components\";\nimport AuthService from \"./AuthService\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response);\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Please, login to access your journal</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"field\">\n            <label className=\"label\">Username</label>\n            <div className=\"control has-icons-left\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Username\"\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-user\"></i>\n              </span>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Password</label>\n            <div className=\"control has-icons-left\">\n              <input\n                className=\"input\"\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Your password\"\n                autoComplete=\"off\"\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-lock\"></i>\n              </span>\n            </div>\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <Link to=\"/public\">\n                <Button color=\"danger\" inverted={true}>\n                  <span>Back to home</span>\n                </Button>\n              </Link>\n            </div>\n            <div className=\"control\">\n              <input type=\"submit\" value=\"Login\" className=\"button is-link\" />\n            </div>\n          </div>\n        </form>\n        <h1>{this.state.error ? 'There seems to be an error. Please, try again' : ''}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Card from \"react-bulma-components/lib/components/card\";\nimport Media from \"react-bulma-components/lib/components/media\";\nimport Image from \"react-bulma-components/lib/components/image\";\nimport Content from \"react-bulma-components/lib/components/content\";\nimport Heading from \"react-bulma-components/lib/components/heading\";\n\nexport default class Experience extends Component {\n  render() {\n    return (\n      <div>\n        <Card>\n          <Card.Image\n            size=\"4by3\"\n            src=\"http://bulma.io/images/placeholders/1280x960.png\"\n          />\n          <Card.Content>\n            <Media>\n              <Media.Item renderAs=\"figure\" position=\"left\">\n                <Image\n                  size={64}\n                  alt=\"64x64\"\n                  src=\"http://bulma.io/images/placeholders/128x128.png\"\n                />\n              </Media.Item>\n              <Media.Item>\n                <Heading size={4}>John Smith</Heading>\n                <Heading subtitle size={6}>\n                  @johnsmith\n                </Heading>\n              </Media.Item>\n            </Media>\n            <Content>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus\n              nec iaculis mauris. <a>@bulmaio</a>.<a href=\"#1\">#css</a>{\" \"}\n              <a href=\"#2\">#responsive</a>\n              <br />\n              <time dateTime=\"2016-1-1\">11:09 PM - 1 Jan 2016</time>\n            </Content>\n          </Card.Content>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {Button} from 'react-bulma-components'\nimport Experience from \"./Experience\";\n\n\nexport default class HomeLogged extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Experience></Experience>\n        <Experience></Experience>\n        <Experience></Experience>\n        <Experience></Experience>\n        <Experience></Experience>\n        <Experience></Experience>\n        <Experience></Experience>\n        <Experience></Experience>\n        <Experience></Experience>\n      </React.Fragment>\n    );\n  }\n}","import axios from 'axios';\n\nclass EscapeService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/user`,\n      withCredentials: true\n    });\n  }\n\n  addExperience = (escapeDone, roomsDone, team, date, imgName, imgPath) => {\n    return this.service.post('//add-experience', {escapeDone, roomsDone, team, date, imgName, imgPath})\n    .then(response => response.data)\n  }\n  allEscapes = () => {\n    return this.service.get('/allescapes')\n    .then(response => response.data)\n  }\n  allRooms = () => {\n    return this.service.get('/allrooms')\n    .then(response => response.data)\n  }\n}\n\nexport default EscapeService;","import React from 'react';\nimport Select from 'react-select';\n\nconst options= (escapes)=> {\n  let options = escapes.map(escape => {\n    return {\n    label: escape.name,\n    value: escape._id}\n  })\n  return options\n}\n\nclass EscapeSelector extends React.Component {\n  state = {\n    selectedOption: null,\n  };\n  handleChange = selectedOption => {\n    this.setState(\n      { selectedOption },\n      () => this.props.updateEscapeDone(this.state.selectedOption)\n    );\n  };\n  render() {\n    const { selectedOption } = this.state;\n\n    return (\n      <Select\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options(this.props.escapes)}\n      />\n    );\n  }\n}\nexport default EscapeSelector;","import React from 'react';\nimport Select from 'react-select';\n\nconst options= (rooms, escape)=> {\n  let filteredRooms = []\n  rooms.forEach(element => {\n    if (element.escape === escape){\n      filteredRooms.push(element)\n    }\n  });\n  let options = filteredRooms.map(room => {\n    return {\n    label: room.name,\n    value: room._id}\n  })\n  return options\n}\n\nclass RoomSelector extends React.Component {\n  state = {\n    selectedOption: null,\n  };\n  handleChange = selectedOption => {\n    this.setState(\n      { selectedOption },\n      () => this.props.updateRoomDone(this.state.selectedOption)\n    );\n  };\n  render() {\n    const { selectedOption } = this.state;\n\n    return (\n      <Select\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options(this.props.rooms, this.props.escape)}\n      />\n    );\n  }\n}\nexport default RoomSelector;","// auth/Signup.js\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bulma-components\";\nimport EscapeService from \"./EscapeService\";\nimport EscapeSelector from \"./EscapeSelector\";\nimport RoomSelector from \"./RoomSelector\";\n\nclass AddExperience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      escapeDone: \"\",\n      roomsDone: \"\",\n      team: [],\n      date: \"\",\n      imgName: \"\",\n      imgPath: \"\"\n    };\n    this.service = new EscapeService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const escapeDone = this.state.escapeDone;\n    const roomsDone = this.state.roomsDone;\n    const team = this.state.team;\n    const date = this.state.date;\n    const imgName = this.state.imgName;\n    const imgPath = this.state.imgPath;\n\n    this.service\n      .addExperience(escapeDone, roomsDone, team, date, imgName, imgPath)\n      .then(response => {\n        this.setState({\n          escapeDone: \"\",\n          roomsDone: \"\",\n          team: [],\n          date: \"\",\n          imgName: \"\",\n          imgPath: \"\"\n        });\n      })\n      .catch(error => {\n        this.setState({\n          ...this.state,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  updateEscapeDone = (selectedEscapeDone) => {\n    this.setState({\n      ...this.state,\n      escapeDone: selectedEscapeDone\n    })\n  }\n  updateRoomDone = (selectedRoomDone) => {\n    this.setState({\n      ...this.state,\n      roomsDone: selectedRoomDone.value,\n      escapeDone: this.state.escapeDone.value\n    })\n  }\n  render() {\n    return (\n      <div>\n        <h3>Please, add your new experience:</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"field\">\n            <label className=\"label\">Escape Name</label>\n            <div className=\"control has-icons-left has-icons-right\">\n            <EscapeSelector\n            className=\"select\"\n              escapes={this.props.escapes}\n              isSearchable={true}\n              updateEscapeDone={this.updateEscapeDone}\n              placeholder=\"Escape room name\"\n            ></EscapeSelector>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Room Name</label>\n            <div className=\"control has-icons-left has-icons-right\">\n            <RoomSelector\n            className=\"select\"\n            escape={this.state.escapeDone.value}\n              rooms={this.props.rooms}\n              isSearchable={true}\n              updateRoomDone={this.updateRoomDone}\n              placeholder=\"Room name\"\n            ></RoomSelector>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"email\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={e => this.handleChange(e)}\n                placeholder=\"your-email-address@email.example\"\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-envelope\"></i>\n              </span>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Password</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={e => this.handleChange(e)}\n                type=\"password\"\n                placeholder=\"Please, choose a password\"\n                autoComplete=\"off\"\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-lock\"></i>\n              </span>\n            </div>\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <Link to=\"/public\">\n                <Button color=\"danger\" inverted={true}>\n                  <span>Back to home</span>\n                </Button>\n              </Link>\n            </div>\n            <div className=\"control\">\n              <input type=\"submit\" value=\"Sign up\" className=\"button is-link\" />\n            </div>\n          </div>\n        </form>\n        <h1>\n          {this.state.error\n            ? \"There seems to be an error. Please, try again\"\n            : \"\"}\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default AddExperience;\n","import React, { Component } from 'react'\n\nexport default class AllExperiences extends Component {\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Profile extends Component {\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomeLogged from \"./HomeLogged\";\nimport AddExperience from \"./AddExperience\";\nimport AllExperiences from \"./AllExperiences\";\nimport Profile from \"./Profile\";\nimport EscapeService from \"./EscapeService\";\n\nclass Contents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: this.props.userInSession,\n      escapes: [],\n      rooms: []\n    };\n    this.userService = new EscapeService();\n  }\n  getEscapes() {\n    this.userService.allEscapes().then(response => {\n      this.setState({\n        ...this.state,\n        escapes: response\n      });\n    });\n  }\n  getRooms() {\n    this.userService.allRooms().then(response => {\n\n      this.setState({\n        ...this.state,\n        rooms: response\n      });\n    });\n  }\n  componentDidMount() {\n    this.getEscapes();\n    this.getRooms();\n  }\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/home\"\n          render={() => (\n            <HomeLogged\n              escapes={this.state.escapes}\n              rooms={this.state.rooms}\n              user={this.state.loggedInUser}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/add-experience\"\n          render={() => (\n            <AddExperience\n              escapes={this.state.escapes}\n              rooms={this.state.rooms}\n              user={this.state.loggedInUser}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/all-experiences\"\n          render={() => (\n            <AllExperiences\n              escapes={this.state.escapes}\n              rooms={this.state.rooms}\n              user={this.state.loggedInUser}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/profile\"\n          render={() => <Profile user={this.state.loggedInUser} />}\n        />\n      </Switch>\n    );\n  }\n}\n\nexport default Contents;\n","import React, { Component } from \"react\";\nimport logo from \"./../../journal-LOGO2.png\";\nimport { Link } from \"react-router-dom\";\nimport {Button} from 'react-bulma-components'\n\nexport default class HomePage extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Keep all your escape room activity in one place</h1>\n        <img src={logo} alt=\"logo\"></img>\n        <h1>Please, log in or sign up to create or access your journal</h1>\n        <Link to=\"/signup\">\n          <Button color=\"info\">\n            <span>Sign up</span>\n          </Button>\n        </Link>\n        <Link to=\"/login\">\n          <Button color=\"primary\">\n            <span>Login</span>\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport Navbar from \"./components/navbar/Navbar\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Contents from \"./components/contents/Contents\";\nimport HomePage from \"./components/contents/HomePage\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n    this.fetchUser()\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n        });\n      });\n  }\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment >\n          <Redirect to=\"/home\" />\n          <div className=\"App\">\n            <header className=\"App-header\">\n            <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Contents userInSession={this.state.loggedInUser}/>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Redirect to=\"/public\" />\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Switch>\n                <Route exact path=\"/public\" render={() => <HomePage />} />\n                <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />} />\n                <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />} />\n              </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './theme.scss'\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/journal-LOGO2.cbf634a3.png\";"],"sourceRoot":""}